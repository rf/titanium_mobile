---
name: Titanium.UI.ScrollView
summary: |
    A view that contains a horizontally and/or vertically-scrollable region of content.  
description: |
    Use the <Titanium.UI.createScrollView> method to create a scroll view.
    
    Views added to the scroll view will be scrolled based on the size of the scrollable region of 
    content. If a scrollable region fits within the size of its scroll view, the view will not 
    scroll.
    
    #### Android
    
    On Android, a scroll view can only scroll in one direction, either vertical or horizontal, 
    and not both at the same time. Hence, the <Titanium.UI.ScrollView.scrollType> property may be 
    used to set the scroll direction explicitly.
    
    If the `scrollType` property is not defined, the scroll view attempts to deduce the scroll 
    direction based on some of the other properties that have been set. Specifically, if 
    `contentWidth` and `width` are both set and are equal to each other, or if they are both set 
    *and* `showVerticalScrollIndicator` is set to `true`, then the scroll direction is set to 
    "vertical".  If `contentHeight` and `height` are both set and are equal, or if they are both 
    set and `showHorizontalScrollIndicator` is set to `true`, then the scroll direction is set 
    to "horizontal".  If `scrollType` is set, it overrides the deduced setting.
extends: Titanium.UI.View
since: "0.9"

methods:
  - name: scrollTo
    summary: Moves the specified coordinate of the scrollable region into the viewable area.
    parameters:
      - name: x
        summary: X coordinate from the scrollable region's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate from the scrollable region's coordinate system.
        type: Number
        
  - name: setContentOffset
    summary: Sets the value of the [contentOffset](Titanium.UI.ScrollView.contentOffset) property.
    platforms: [iphone, ipad, mobileweb]
    parameters:
      - name: contentOffset
        summary: |
            X and Y coordinates to which to reposition the top-left point of the scrollable region.
        type: Dictionary
        
      - name: animated
        summary: Determines whether the scrollable region reposition should be animated 
        type: contentOffsetOption
        optional: true
        
  - name: scrollToBottom
    summary: Moves the end of the scrollable region into the viewable area.
    description: |
        On Android the behavior of `scrollToBottom` depends on whether this scroll view scrolls 
        horizontally or vertically. For vertical scroll views, `scrollToBottom` moves the bottom 
        of the scrollable region into the viewable area. For horizontal scroll views,
        `scrollToBottom` moves the rightmost edge of of the scrollable region into the viewable area.
        
        On iOS, `scrollToBottom` moves the bottom-right corner of the scrollable region into the 
        viewable area.
    platforms: [android, iphone, ipad]
    since: {iphone: "2.1.0", ipad: "2.1.0"}
        
events:
  - name: scale
    summary: Fired when the zoom scale factor changes.
    platforms: [iphone, ipad]
    properties:
      - name: globalPoint
        summary: X and Y coordinates of the event from the display's coordinate system.
        type: Dictionary
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"

      - name: scale
        summary: New scaling factor as a float.
        type: Number
      
  - name: scroll
    summary: Fired when the scrollable region is scrolled.
    properties:
      - name: decelerating
        summary: Indicates whether the scroll is decelerating.
        type: Boolean
        platforms: [iphone, ipad, mobileweb]

      - name: dragging
        summary: |
            Indicates whether the event was fired during a dragging gesture, where the touch 
            remained in contact with the display to physically drag the view, as opposed to it being 
            the result of scrolling momentum.
        type: Boolean
        platforms: [iphone, ipad, mobileweb]
        
      - name: globalPoint
        summary: X and Y coordinates of the event from the display's coordinate system.
        type: Dictionary
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
            
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number

      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number

  - name: scrollEnd
    summary: Fired when the view has stopped moving completely.
    platforms: [mobileweb]
    since: "2.1.0"

  - name: dragStart
    summary: Fired when the scrollable region starts being dragged.
    description: |
        A dragging gesture is when a touch remains in contact with the display to physically drag 
        the view, as opposed to it being the result of scrolling momentum.
    platforms: [iphone, ipad, mobileweb]
   
  - name: dragEnd
    summary: Fired when the scrollable region stops being dragged.
    description: |
        A dragging gesture is when a touch remains in contact with the display to physically drag 
        the view, as opposed to it being the result of scrolling momentum.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: decelerate
        summary: |
            Indicates whether scrolling will continue but decelerate, now that the drag gesture has 
            been released by the touch. If `false`, scrolling will stop immediately.
        type: Boolean
properties:
  - name: canCancelEvents
    summary: |
        Determines whether this scroll view can cancel subview touches in order to scroll instead.
    description: Set to `false` to ensure that subview touches always take effect.
    type: Boolean
    default: true
    platforms: [android, iphone, ipad]

  - name: contentHeight
    summary: Height of the scrollable region.
    description: |
        While `auto` and absolute dimensions are supported, relative values, such as those provided 
        in percentages, are not. The minimum value for contentHeight is the height of the scroll view.
    type: [Number, String]
    
  - name: contentOffset
    summary: |
        X and Y coordinates to which to reposition the top-left point of the scrollable region.
    type: Dictionary
    description: |
        On iOS, a new value causes the scroll view to perform an animated scroll to the new offset. 
        The <Titanium.UI.ScrollView.setContentOffset> method can be used to prevent this animation.
        
  - name: contentWidth
    summary: Width of the scrollable region.
    description: |
        While `auto` and absolute dimensions are supported, relative values, such as those provided 
        in percentages, are not. The minimum value for contentWidth is the width of the scroll view.
    type: [Number, String]
    
  - name: disableBounce
    summary: Determines whether scroll bounce of the scrollable region is enabled.
    description: |
        Set to `true` to disable horizontal and vertical bounce.
        
        This property takes precedence over the `horizontalBounce` and `verticalBounce` properties.
    type: Boolean
    default: false
    platforms: [iphone, ipad, mobileweb]
    
  - name: horizontalBounce
    summary: Determines whether horizontal scroll bounce of the scrollable region is enabled.
    description: |
        With the default value of `true`, dragging in the horizontal direction is always allowed and 
        also bounces.
        
        Set to `false` to disable horizontal scroll bounce if the horizontal content is smaller than 
        the scroll view bounds. However, larger content will still bounce when scrolled.
        
        Note that the `disableBounce` property takes precedence over the `horizontalBounce` and 
        `verticalBounce` properties.
    type: Boolean
    default: true
    platforms: [iphone, ipad, mobileweb]
    
  - name: maxZoomScale
    summary: Maximum scaling factor of the scrollable region and its content.
    description: |
        This value determines how large the content can be scaled. 
        It must be greater than the [minimum zoom scale](Titanium.UI.ScrollView.minZoomScale) for zooming to be enabled. 
        The default value is 1.0 unless otherwise specified.
        
        Note that specifying a value less than or equal to 0 will hide all contents of the scroll view.
    type: Number
    default: 1.0
    platforms: [iphone, ipad]
    
  - name: minZoomScale
    summary: Minimum scaling factor of the scrollable region and its content.
    description: |
        This value determines how small the content can be scaled. 
        It must be less than the [maximum zoom scale](Titanium.UI.ScrollView.maxZoomScale) for zooming to be enabled. 
        The default value is 1.0 unless otherwise specified.
    type: Number
    default: 1.0
    platforms: [iphone, ipad]
    
  - name: scrollIndicatorStyle
    summary: |
        Style of the scrollbar, specified using one of the constants from 
        <Titanium.UI.iPhone.ScrollIndicatorStyle>.
    type: Number
    default: <Titanium.UI.iPhone.ScrollIndicatorStyle.DEFAULT>
    platforms: [iphone, ipad]

  - name: scrollType
    summary: |
        Limits the direction of the scrollable region, overriding the deduced setting. Set to 
        `horizontal` or `vertical`.
    description: |
        See the [scrollView](Titanium.UI.ScrollView) description for more details about how the 
        scroll direction is deduced when this property is not defined.
    type: String
    availability: creation
    platforms: [android]
    
  - name: showHorizontalScrollIndicator
    summary: Determines whether the horizontal scroll indicator is visible.
    description: Set to `true` to show the horizontal scroll indicator.
    type: Boolean
    default: false
    
  - name: showVerticalScrollIndicator
    summary: Determines whether the vertical scroll indicator is visible.
    description: Set to `true` to show the vertical scroll indicator.
    type: Boolean
    default: false
    
  - name: verticalBounce
    summary: Determines whether vertical scroll bounce of the scrollable region is enabled.
    description: |
        With the default value of `true`, dragging in the vertical direction is always allowed and 
        also bounces.
        
        Set to `false` to disable vertical scroll bounce if the vertical content is smaller than 
        the scroll view bounds. However, larger content will still bounce when scrolled.
        
        Note that the `disableBounce` property takes precedence over the `horizontalBounce` and 
        `verticalBounce` properties.
    type: Boolean
    default: true
    platforms: [iphone, ipad, mobileweb]
    
  - name: zoomScale
    summary: Scaling factor of the scrollable region and its content.
    description: |
        This value is bound by the [minZoomScale](Titanium.UI.ScrollView.minZoomScale) and [maxZoomScale](Titanium.UI.ScrollView.maxZoomScale) properties.
    type: Number
    default: 1
    platforms: [iphone, ipad]
examples:
  - title: Simple Scroll View
    example: |
        Create a scroll view with content.
        
            var win = Ti.UI.createWindow({
              backgroundColor: 'white',
              exitOnClose: true,
              fullscreen: false,
              title: 'ScrollView Demo'
            });
            
            var scrollView = Ti.UI.createScrollView({
              contentWidth: 'auto',
              contentHeight: 'auto',
              showVerticalScrollIndicator: true,
              showHorizontalScrollIndicator: true,
              height: '80%',
              width: '80%'
            });
            var view = Ti.UI.createView({
              backgroundColor:'#336699',
              borderRadius: 10,
              top: 10,
              height: 2000,
              width: 1000
            });
            scrollView.add(view);
            win.add(scrollView);
            win.open();
  - title: Scroll View as a Table View
    example: |
        Create a scroll view that contains a set of views in a layout to resemble a table view with 
        rows. This approach can mitigate the native Android issue described in the "TextFields in 
        Tables with SOFT_INPUT_ADJUST_PAN" section of <Titanium.UI.TableView>. 
        
            var win = Ti.UI.createWindow({
              backgroundColor:'white'
            });
            
            if (Ti.UI.Android){
              win.windowSoftInputMode = Ti.UI.Android.SOFT_INPUT_ADJUST_PAN;
            }
            
            function createRow(i) {
              var row = Ti.UI.createView({
                backgroundColor: 'white',
                borderColor: '#bbb',
                borderWidth: 1,
                width:'100%', height: 70,
                top: 0, left: 0
              });
              var inputTextField = Ti.UI.createTextField({
                hintText: 'Enter value ' + i,
                keyboardType: Ti.UI.KEYBOARD_NUMBERS_PUNCTUATION,
                top: 10, left: '10%',
                width: '80%', height: 60
              });
              row.add(inputTextField);
              return row;
            }
            
            var scrollView = Ti.UI.createScrollView({
              bottom:120,
              contentHeight: 'auto',
              layout: 'vertical'
            });
            
            for(var i = 0; i <= 20; i++){
            var row = createRow(i);
              scrollView.add(row);
            }
            win.add(scrollView);
            
            var label = Ti.UI.createLabel({
              backgroundColor:'darkgray',
              text: 'Your advert here',
              textAlign: 'center',
              bottom:0,
              width: Titanium.UI.FILL, height:100
            });
            win.add(label);
            win.open();

---
name: contentOffsetOption
summary: Optional parameter for [setContentOffset](Titanium.UI.ScrollView.setContentOffset) method.
description: |
    On iOS, the optional parameter `animated` to enable the animation while the scrollable region 
    scrolls. For example

        setContentOffset({x:50,y:100}, {animated:true})
optional: true
since: 1.8.1
platforms: [iphone, ipad]

properties:
  - name: animated
    summary: Determines whether the scroll view's content area change is animated.
    type: Boolean

        
